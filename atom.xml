<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://ximendatie.github.io/</id>
    <title>Harvey</title>
    <updated>2019-07-03T09:40:05.466Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://ximendatie.github.io/"/>
    <link rel="self" href="https://ximendatie.github.io//atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://ximendatie.github.io//images/avatar.png</logo>
    <icon>https://ximendatie.github.io//favicon.ico</icon>
    <rights>All rights reserved 2019, Harvey</rights>
    <entry>
        <title type="html"><![CDATA[常用指令]]></title>
        <id>https://ximendatie.github.io//post/chang-yong-zhi-ling</id>
        <link href="https://ximendatie.github.io//post/chang-yong-zhi-ling">
        </link>
        <updated>2019-07-03T03:39:24.000Z</updated>
        <summary type="html"><![CDATA[<p>git等常用指令</p>
]]></summary>
        <content type="html"><![CDATA[<p>git等常用指令</p>
<!-- more -->
<p>新建分支并切换到该分支
git checkout -b test</p>
<p>删除本地分支
git branch -d dev</p>
<p>删除远程分支
git branch -r -d origin/branch_dev
or
git push origin :branch_dev</p>
<p>本地新分支同步到远程
git push origin branch_dev:branch_dev
冒号前是本地分支的名，冒号后面是要创建的远程分支名，自己另起名称随便，如果直接使用 git push origin branch_dev 则默认和远程分支同名</p>
<p>远程新分支拉到本地
1.git checkout -b test origin/test
如果失败，尝试先git fetch后执行
采用此种方法建立的本地分支会和远程分支建立映射关系
2.git fetch origin test:test
使用该方式会在本地新建分支，但是不会自动切换到该本地分支，需要手动checkout。
采用此种方法建立的本地分支不会和远程分支建立映射关系。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[博客开发]]></title>
        <id>https://ximendatie.github.io//post/bo-ke-kai-fa</id>
        <link href="https://ximendatie.github.io//post/bo-ke-kai-fa">
        </link>
        <updated>2019-06-25T12:54:32.000Z</updated>
        <content type="html"><![CDATA[<p>github pages是github直接对你提供的一些静态页面做的路由服务。</p>
<p>博客的核心是素材，主题是对布局和样式的控制，可以传入变量，这样有很高的灵活性。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[PWA是什么]]></title>
        <id>https://ximendatie.github.io//post/pwa-shi-shi-me</id>
        <link href="https://ximendatie.github.io//post/pwa-shi-shi-me">
        </link>
        <updated>2019-06-18T09:25:37.000Z</updated>
        <content type="html"><![CDATA[<p>引用自 Harttle.Land 的说法：</p>
<blockquote>
<p>PWA（Progressive Web Apps）是 Google 最近在提的一种 Web App 形态 （或者如 Wikipedia 所称的「软件开发方法」）。 Harttle 能找到的关于 PWA 最早的一篇文章是 2015年6月 Alex Russell 的一篇博客： Progressive apps escaping tabs without losing our soul， 让 Web App 从标签页跳出来，同时保持 Web 的灵魂。</p>
</blockquote>
<p>PWA终究还是运行在浏览器内，只是形式类app，所以能不能运行还是看当前浏览器的支持</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[PWA开发入门]]></title>
        <id>https://ximendatie.github.io//post/pwa-kai-fa-ru-men</id>
        <link href="https://ximendatie.github.io//post/pwa-kai-fa-ru-men">
        </link>
        <updated>2019-06-18T08:46:59.000Z</updated>
        <summary type="html"><![CDATA[<p>pwa的开发相对于普通页面有两个重要点：页面缓存和app安装
页面缓存可以通过sevice worker控制，app安装可以用manifest进行配置</p>
]]></summary>
        <content type="html"><![CDATA[<p>pwa的开发相对于普通页面有两个重要点：页面缓存和app安装
页面缓存可以通过sevice worker控制，app安装可以用manifest进行配置</p>
<!-- more -->
<p>sw生命周期：
<img src="https://ximendatie.github.io//post-images/1560849141838.png" alt=""></p>
<p><a href="https://mp.weixin.qq.com/s?__biz=MzUxMzcxMzE5Ng==&amp;mid=2247485643&amp;idx=1&amp;sn=def301d392c45679bee3317f2c1bf0ad&amp;source=41#wechat_redirect">百度搜索对PWA的探索和初步实践</a>
<a href="http://zhenhua-lee.github.io/http/service-worker.html"> Service worker介绍</a>
<a href="https://mp.weixin.qq.com/s?__biz=MzUxMzcxMzE5Ng==&amp;mid=2247485646&amp;idx=1&amp;sn=c9b73bcf34c6d275efd1627f93d9a7d6&amp;source=41#wechat_redirect">PWA 实践：从一个简单的页面开始</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[test]]></title>
        <id>https://ximendatie.github.io//post/test</id>
        <link href="https://ximendatie.github.io//post/test">
        </link>
        <updated>2019-06-06T03:29:19.000Z</updated>
        <summary type="html"><![CDATA[<p>新学习笔记</p>
]]></summary>
        <content type="html"><![CDATA[<p>新学习笔记</p>
<!-- more -->
<p>hello</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://ximendatie.github.io//post/hello-gridea</id>
        <link href="https://ximendatie.github.io//post/hello-gridea">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="http://hvenotes.fehey.com/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>𝖶𝗂𝗇𝖽𝗈𝗐𝗌</strong> 或 <strong>𝖬𝖺𝖼𝖮𝖲</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>